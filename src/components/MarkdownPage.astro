---
interface Props {
  title?: string;
  description?: string;
  content: string;
}

const { title, description, content } = Astro.props;

function parseContent(content: string): { title: string; content: string }[] {
  const sections = content.split(/^# /m).filter(Boolean);
  return sections.map((section) => {
    const lines = section.trim().split("\n");
    const sectionTitle = lines[0];
    const remainingLines = lines.slice(1).filter((line) => line.trim());

    return {
      title: sectionTitle,
      content: remainingLines.join("\n"),
    };
  });
}

const parsedContent = parseContent(content);
---

<div class="flex flex-col gap-2">
  {
    (title || description) && (
      <section>
        {title && (
          <h1 class="text-2xl font-bold mb-4 text-[--color-text-primary] capitalize">
            {title}
          </h1>
        )}
        {description && (
          <p class="text-md max-w-2xl text-pretty text-[--color-text-primary] mb-3">
            {description}
          </p>
        )}
      </section>
    )
  }

  <div class="grid lg:grid-cols-2 gap-2 lg:gap-8 max-w-6xl">
    {
      parsedContent.map((section) => (
        <section>
          <h2 class="text-xl font-medium mb-3 text-[--color-text-primary] capitalize">
            {section.title}
          </h2>
          <div class="space-y-2">
            <div
              set:html={section.content
                .replace(
                  /^## (.+)$/gm,
                  '<h2 class="text-lg font-semibold text-[--color-text-primary] mb-3 mt-6">$1</h2>'
                )
                .replace(
                  /### (.+)/g,
                  '<h3 class="text-base font-medium text-[--color-text-primary] mb-2 mt-4">$1</h3>'
                )
                .replace(
                  /^- (.+)$/gm,
                  '<div class="text-[--color-text-primary] mb-1"><span class="inline-block relative top-1">*</span> $1</div>'
                )
                .replace(
                  /\[([^\]]+)\]\(([^)]+)\)/g,
                  '<a href="$2" class="text-[--color-secondary] hover:text-[--color-secondary-hover] hover:underline" target="_blank" rel="noopener">$1</a>'
                )
                .replace(
                  /^(?!<[hd])(.+)$/gm,
                  '<p class="text-[--color-text-primary] leading-relaxed">$1</p>'
                )}
            />
          </div>
        </section>
      ))
    }
  </div>
</div>
