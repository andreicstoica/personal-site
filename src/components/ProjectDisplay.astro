---
import MediaGallery from "./MediaGallery.astro";
import BackButton from "./BackButton.astro";
import type { Project } from "../../lib/types";

interface Props {
  project: Project;
}

const { project } = Astro.props;
---

<div class="w-full p-4 lg:px-8 lg:mt-3.5">
  <BackButton />

  <!-- Project Header -->
  <div class="mb-8 max-w-5xl">
    <h1 class="text-xl lg:text-xl font-bold text-[--color-text-primary] mb-1">
      {project.title}
    </h1>
    <p class="text-md text-[--color-text-secondary] leading-relaxed">
      {project.description}
    </p>
  </div>

  <!-- Technologies -->
  <div class="mb-8">
    <h2
      class="text-lg lg:text-xl font-semibold text-[--color-text-primary] mb-4"
    >
      Technologies
    </h2>
    <div class="flex flex-wrap gap-3">
      {
        project.technologies.map((tech) => (
          <span class="px-4 py-2 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-sm font-medium">
            {tech}
          </span>
        ))
      }
    </div>
  </div>

  <!-- Project Links -->
  {
    (project.links.demo || project.links.github || project.links.website) && (
      <div class="mb-8">
        <h2 class="text-lg lg:text-xl font-semibold text-[--color-text-primary] mb-4">
          Links
        </h2>
        <div class="flex flex-wrap gap-4">
          {project.links.demo && (
            <a
              href={project.links.demo}
              target="_blank"
              rel="noopener noreferrer"
              class="btn-secondary-custom inline-flex items-center px-4 py-2 transition-colors"
            >
              <svg
                class="w-5 h-5 mr-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                />
              </svg>
              Live Demo
            </a>
          )}
          {project.links.github && (
            <a
              href={project.links.github}
              target="_blank"
              rel="noopener noreferrer"
              class="btn-accent-custom inline-flex items-center px-4 py-2 transition-colors"
            >
              <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" />
              </svg>
              GitHub
            </a>
          )}
          {project.links.website && (
            <a
              href={project.links.website}
              target="_blank"
              rel="noopener noreferrer"
              class="btn-secondary-custom inline-flex items-center px-4 py-2 transition-colors"
            >
              <svg
                class="w-5 h-5 mr-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9"
                />
              </svg>
              Website
            </a>
          )}
        </div>
      </div>
    )
  }

  <!-- Project Video -->
  {
    project.video && (
      <div class="mb-8">
        <h2 class="text-lg lg:text-xl font-semibold text-[--color-text-primary] mb-4">
          Video Demo
        </h2>
        <div class="relative w-full" style="padding-bottom: 56.25%;">
          <iframe
            src={
              project.video.includes("youtube.com/shorts/")
                ? project.video.replace(
                    "youtube.com/shorts/",
                    "youtube.com/embed/",
                  ) + "?autoplay=1"
                : project.video
            }
            class="absolute top-0 left-0 w-full h-full rounded-lg"
            allow="autoplay; fullscreen; picture-in-picture"
            allowfullscreen
          />
        </div>
      </div>
    )
  }

  <!-- Project Images -->
  {
    project.images && project.images.length > 0 && (
      <div class="mb-8">
        <h2 class="text-lg lg:text-xl font-semibold text-[--color-text-primary] mb-4">
          Screenshots
        </h2>
        <MediaGallery
          images={project.images}
          experienceName={project.title}
          variant="desktop"
        />
      </div>
    )
  }

  <!-- Technical Details -->
  {
    project.technicalDetails && (
      <div class="mb-8">
        <h2 class="text-lg lg:text-xl font-semibold text-[--color-text-primary] mb-4">
          Technical Overview
        </h2>

        <!-- Key Features -->
        <div class="mb-6">
          <h3 class="text-md font-semibold text-[--color-text-primary] mb-2">
            Key Features
          </h3>
          <ul class="list-disc list-inside space-y-1">
            {project.technicalDetails.keyFeatures.map((feature) => (
              <li class="text-sm text-[--color-text-secondary]">{feature}</li>
            ))}
          </ul>
        </div>

        <!-- Technical Challenges -->
        <div class="mb-6">
          <h3 class="text-md font-semibold text-[--color-text-primary] mb-2">
            Technical Challenges
          </h3>
          <ul class="list-disc list-inside space-y-1">
            {project.technicalDetails.challenges.map((challenge) => (
              <li class="text-sm text-[--color-text-secondary]">{challenge}</li>
            ))}
          </ul>
        </div>

        <!-- Implementation Details -->
        <div class="mb-6">
          <h3 class="text-md font-semibold text-[--color-text-primary] mb-2">
            Implementation
          </h3>
          <ul class="list-disc list-inside space-y-1">
            {project.technicalDetails.implementation.map((detail) => (
              <li class="text-sm text-[--color-text-secondary]">{detail}</li>
            ))}
          </ul>
        </div>
      </div>
    )
  }
</div>

<style>
  /* Custom button styles using tag colors */
  .btn-secondary-custom {
    background: var(--tag-personal);
    color: #18181b !important;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .btn-secondary-custom:hover {
    background: var(--tag-personal);
    filter: brightness(0.9);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .btn-accent-custom {
    background: var(--tag-school);
    color: #18181b !important;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .btn-accent-custom:hover {
    background: var(--tag-school);
    filter: brightness(0.9);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
</style>
