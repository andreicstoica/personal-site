---
import canonContent from "../../lib/canon.md?raw";

// Parse the markdown content
function parseCanonContent(content: string) {
  const sections = content.split(/^# /m).filter(Boolean);
  return sections.map((section) => {
    const lines = section.trim().split("\n");
    const title = lines[0];
    const items = lines
      .slice(2)
      .filter((line) => line.startsWith("- "))
      .map((line) => {
        const text = line.substring(2);
        // Check if it's a markdown link
        const linkMatch = text.match(/\[([^\]]+)\]\(([^)]+)\)(.*)/);
        if (linkMatch) {
          return {
            name: linkMatch[1],
            description: linkMatch[3].trim(),
            link: linkMatch[2],
          };
        }
        return {
          name: text,
          description: "",
          link: null,
        };
      });
    return { title, items };
  });
}

const canonSections = parseCanonContent(canonContent);
---

<div class="flex flex-col gap-12 p-8">
  <!-- Breadcrumb -->
  <nav class="text-sm">
    <a
      href="/"
      class="text-[--color-text-primary] hover:underline flex items-center gap-2"
    >
      ‚Üê Home
    </a>
  </nav>

  <section>
    <p class="text-md max-w-3xl text-pretty text-[--color-text-primary] mb-8">
      People, things, and ideas that inspire me and shape how I think about the
      world. This is a living document that grows as I discover new voices and
      perspectives.
    </p>

    <div class="grid lg:grid-cols-2 gap-6 lg:gap-8 max-w-6xl">
      {
        canonSections.map((section) => (
          <section>
            <h2 class="text-xl font-medium mb-2 text-[--color-text-primary] capitalize">
              {section.title}
            </h2>
            <ul class="list-disc list-inside space-y-1.5 capitalize">
              {section.items.map((item) => (
                <li class="text-[--color-text-primary]">
                  {item.link ? (
                    <a
                      href={item.link}
                      class="text-(--color-secondary) hover:text-(--color-secondary-hover) hover:underline"
                      target="_blank"
                      rel="noopener"
                    >
                      {item.name}
                    </a>
                  ) : (
                    <span>{item.name}</span>
                  )}
                  {item.description && (
                    <span class="text-[--color-text-secondary] ml-1">
                      {item.description}
                    </span>
                  )}
                </li>
              ))}
            </ul>
          </section>
        ))
      }
    </div>
  </section>
</div>
